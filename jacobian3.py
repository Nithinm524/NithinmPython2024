# -*- coding: utf-8 -*-
"""jacobian3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18owxDt2iE8kxONB3RNN7oJ6YB2K4TaUX

X =ρ∗cos(φ)∗sin(θ), Y = ρ∗cos(φ)∗cos(θ), Z = ρ∗sin(φ) then find ∂(X,Y,Z)
 ∂(ρ,φ,θ)
"""

from sympy import *
from sympy.abc import rho, phi, theta
X=rho*cos(phi)*sin(theta);
Y=rho*cos(phi)*cos(theta);
Z=rho*sin(phi);
dx=Derivative(X,rho).doit()
dy=Derivative(Y,rho).doit()
dz=Derivative(Z,rho).doit()
dx1=Derivative(X,phi).doit();
dy1=Derivative(Y,phi).doit();
dz1=Derivative(Z,phi).doit()
dx2=Derivative(X,theta).doit()
dy2=Derivative(Y,theta).doit();
dz2=Derivative(Z,theta).doit();
J=Matrix([[dx,dy,dz],[dx1,dy1,dz1],[dx2,dy2,dz2]]);
print('The Jacobian matrix is ')
display(J)
print('\n\n J = \n')
display(simplify(Determinant(J).doit()))
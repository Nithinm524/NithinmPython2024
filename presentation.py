# -*- coding: utf-8 -*-
"""presentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hi2K63hIVYMLitFW3Hmsic0mUFsAWciT
"""

class InventoryManager: #defines a new class InventoryManager that handles inventory management
    def __init__(self):#this is initializer method of the class is called when instance of class is created
        self.inventory = {}#initializes an Empty Dictionary named inventory to store item details (name quantity and price)

    def add_item(self, item_name, quantity, price):# Define some method named add_item to add a new item to the inventory it accepts the item's name quantity and price as arguments
          self.inventory[item_name] = {'quantity': quantity, 'price': price}# Updates and entry in the inventory dictionary with provided item_name as the key and dictionary of quantity and price as the value

    def display_inventory(self):# Define some method named display_inventory to print the current inventory
        for item, details in self.inventory.items():# Iterate through each item and its details in the inventory dictionary
             print(f"{item}: Quantity={details['quantity']}, Price={details['price']}")#print the item's name quantity and price in formatted string

manager = InventoryManager()# Creates an instance of the InventoryManager class called manager
manager.add_item('Apple', 10, 1.5)# Call the add item method to add an item named Apple with quantity 10 and price of 1.5 to the inventory
manager.display_inventory()# Call the display_inventory method to print the current inventory showing the items their quantity and prices

"""this simple program to demonstrate how to manage inventory items With properties like item name quantity and price"""
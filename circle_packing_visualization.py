# -*- coding: utf-8 -*-
"""Circle Packing Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vFlyDvWbwLJ0ArmxuS5YMyp5cvsTzjy-
"""

import matplotlib.pyplot as plt
import random

def generate_circle_packing(num_circles):
    circles = []
    for _ in range(num_circles):
        r = random.uniform(0.01, 0.05)
        x, y = random.uniform(r, 1 - r), random.uniform(r, 1 - r)
        overlapping = any((x - cx) ** 2 + (y - cy) ** 2 < (r + cr) ** 2 for cx, cy, cr in circles)
        if not overlapping:
            circles.append((x, y, r))
    return circles

# Example usage
circles = generate_circle_packing(50)
fig, ax = plt.subplots()
ax.set_aspect('equal')
for x, y, r in circles:
    circle = plt.Circle((x, y), r, fill=True, alpha=0.6)
    ax.add_artist(circle)
plt.xlim(0, 1)
plt.ylim(0, 1)
plt.show()
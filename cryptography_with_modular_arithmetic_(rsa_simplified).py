# -*- coding: utf-8 -*-
"""Cryptography with Modular Arithmetic (RSA Simplified).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hodok_f2BXNiK3U58m5qW0ZsyovBo3Y4
"""

from sympy import mod_inverse

def rsa_encrypt_decrypt():
    p, q = 61, 53  # Example primes
    n = p * q
    phi = (p - 1) * (q - 1)
    e = 17  # Public key exponent
    d = mod_inverse(e, phi)  # Private key exponent

    message = int(input("Enter a message (as a number): "))
    encrypted = pow(message, e, n)
    decrypted = pow(encrypted, d, n)

    print(f"Encrypted message: {encrypted}")
    print(f"Decrypted message: {decrypted}")

rsa_encrypt_decrypt()